<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.linzx.common.mapper.QuartzJobMapper">
    
    <resultMap type="com.linzx.common.domain.QuartzJob" id="QuartzJobResult">
        <result property="jobId"    column="job_id"    />
        <result property="jobName"    column="job_name"    />
        <result property="jobGroup"    column="job_group"    />
        <result property="invokeTarget"    column="invoke_target"    />
        <result property="cronExpression"    column="cron_expression"    />
        <result property="misfirePolicy"    column="misfire_policy"    />
        <result property="concurrent"    column="concurrent"    />
        <result property="status"    column="status"    />
        <result property="delFlag"    column="del_flag"    />
        <result property="revision"    column="revision"    />
        <result property="createdBy"    column="created_by"    />
        <result property="createdTime"    column="created_time"    />
        <result property="updatedBy"    column="updated_by"    />
        <result property="updatedTime"    column="updated_time"    />
        <result property="remark"    column="remark"    />
    </resultMap>
	
	<sql id="selectVo">
        select job_id, job_name, job_group, invoke_target, cron_expression, misfire_policy, concurrent, status, del_flag, revision, created_by, created_time, updated_by, updated_time, remark from common_quartz_job
    </sql>
	
    <select id="selectList" parameterType="com.linzx.common.domain.QuartzJob" resultMap="QuartzJobResult">
        <include refid="selectVo"/>
        <include refid="selectList_where"/>
    </select>
    <sql id="selectList_where">
        <where>
            <if test="jobId != null "> and job_id = #{jobId}</if>
            <if test="jobName != null "> and job_name = #{jobName}</if>
            <if test="jobGroup != null "> and job_group = #{jobGroup}</if>
            <if test="invokeTarget != null "> and invoke_target = #{invokeTarget}</if>
            <if test="cronExpression != null "> and cron_expression = #{cronExpression}</if>
            <if test="misfirePolicy != null "> and misfire_policy = #{misfirePolicy}</if>
            <if test="concurrent != null "> and concurrent = #{concurrent}</if>
            <if test="status != null "> and status = #{status}</if>
            <if test="delFlag != null "> and del_flag = #{delFlag}</if>
            <if test="revision != null "> and revision = #{revision}</if>
            <if test="createdBy != null "> and created_by = #{createdBy}</if>
            <if test="createdTime != null "> and created_time = #{createdTime}</if>
            <if test="updatedBy != null "> and updated_by = #{updatedBy}</if>
            <if test="updatedTime != null "> and updated_time = #{updatedTime}</if>
            <if test="remark != null "> and remark = #{remark}</if>
        </where>
    </sql>
    <select id="getById" parameterType="java.lang.Long" resultMap="QuartzJobResult">
        <include refid="selectVo"/>
        where job_id = #{jobId}
    </select>
        
    <insert id="insert" parameterType="com.linzx.common.domain.QuartzJob" useGeneratedKeys="true" keyProperty="jobId">
        insert into common_quartz_job
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="jobName != null  ">job_name,</if>
			<if test="jobGroup != null  ">job_group,</if>
			<if test="invokeTarget != null  ">invoke_target,</if>
			<if test="cronExpression != null  ">cron_expression,</if>
			<if test="misfirePolicy != null  ">misfire_policy,</if>
			<if test="concurrent != null  ">concurrent,</if>
			<if test="status != null  ">status,</if>
			<if test="delFlag != null  ">del_flag,</if>
			<if test="revision != null  ">revision,</if>
			<if test="createdBy != null  ">created_by,</if>
			<if test="createdTime != null  ">created_time,</if>
			<if test="updatedBy != null  ">updated_by,</if>
			<if test="updatedTime != null  ">updated_time,</if>
			<if test="remark != null  ">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="jobName != null  ">#{jobName},</if>
			<if test="jobGroup != null  ">#{jobGroup},</if>
			<if test="invokeTarget != null  ">#{invokeTarget},</if>
			<if test="cronExpression != null  ">#{cronExpression},</if>
			<if test="misfirePolicy != null  ">#{misfirePolicy},</if>
			<if test="concurrent != null  ">#{concurrent},</if>
			<if test="status != null  ">#{status},</if>
			<if test="delFlag != null  ">#{delFlag},</if>
			<if test="revision != null  ">#{revision},</if>
			<if test="createdBy != null  ">#{createdBy},</if>
			<if test="createdTime != null  ">#{createdTime},</if>
			<if test="updatedBy != null  ">#{updatedBy},</if>
			<if test="updatedTime != null  ">#{updatedTime},</if>
			<if test="remark != null  ">#{remark},</if>
         </trim>
    </insert>
	 
    <update id="update" parameterType="com.linzx.common.domain.QuartzJob">
        update common_quartz_job
        <trim prefix="SET" suffixOverrides=",">
            <if test="jobName != null  ">job_name = #{jobName},</if>
            <if test="jobGroup != null  ">job_group = #{jobGroup},</if>
            <if test="invokeTarget != null  ">invoke_target = #{invokeTarget},</if>
            <if test="cronExpression != null  ">cron_expression = #{cronExpression},</if>
            <if test="misfirePolicy != null  ">misfire_policy = #{misfirePolicy},</if>
            <if test="concurrent != null  ">concurrent = #{concurrent},</if>
            <if test="status != null  ">status = #{status},</if>
            <if test="delFlag != null  ">del_flag = #{delFlag},</if>
            <if test="revision != null  ">revision = #{revision},</if>
            <if test="createdBy != null  ">created_by = #{createdBy},</if>
            <if test="createdTime != null  ">created_time = #{createdTime},</if>
            <if test="updatedBy != null  ">updated_by = #{updatedBy},</if>
            <if test="updatedTime != null  ">updated_time = #{updatedTime},</if>
            <if test="remark != null  ">remark = #{remark},</if>
        </trim>
        where job_id = #{jobId}
    </update>

	<delete id="deleteById" parameterType="java.lang.Long">
        delete from common_quartz_job where job_id = #{jobId}
    </delete>
	
    <delete id="deleteByIds" parameterType="java.lang.Long">
        delete from common_quartz_job where job_id in 
        <foreach item="jobId" collection="array" open="(" separator="," close=")">
            #{jobId}
        </foreach>
    </delete>
    
</mapper>